<Window x:Class="WorkHours6.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WorkHours6"
        xmlns:controls="clr-namespace:WorkHours6.Controls"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        xmlns:infra="clr-namespace:WorkHours6.Infra"
        xmlns:services="clr-namespace:WorkHours6.Services"
        mc:Ignorable="d"
        Title="Work Hours 6" Height="250"
        Width="{x:Static services:SettingsService.WindowWidth}"
        Topmost="{Binding IsTopMost, Source={x:Static services:SettingsService.UserSettings}}"
        ResizeMode="NoResize"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        Closing="SettingsWindow_Closing">
    <Border
        Background="White"
        BorderBrush="{x:Static services:SettingsService.ThemeAccentBrush}"
        BorderThickness="1, 1, 0, 0"
        CornerRadius="5, 5, 0, 0">
        <Grid>
            <Grid
                DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:SettingsWindow}}"
                Margin="10">
                <Grid.Resources>
                    <infra:IsPreviousDateConverter
                        x:Key="IsPreviousDateConverter" />

                    <Style
                        TargetType="DatePicker">
                        <Setter
                            Property="VerticalAlignment"
                            Value="Center" />
                    </Style>
                    <Style
                        TargetType="TextBlock">
                        <Setter
                            Property="VerticalAlignment"
                            Value="Center" />

                        <Style.Triggers>
                            <Trigger
                                Property="IsEnabled"
                                Value="False">
                                <Setter
                                    Property="Foreground"
                                    Value="Gray" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style
                        x:Key="ExplanationText"
                        TargetType="TextBlock"
                        BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter
                            Property="FontSize"
                            Value="10" />
                        <Setter
                            Property="FontStyle"
                            Value="Italic" />
                        <Setter
                            Property="Foreground"
                            Value="Gray" />
                        <Setter
                            Property="Grid.Column"
                            Value="0" />
                        <Setter
                            Property="Grid.ColumnSpan"
                            Value="2" />
                        <Setter
                            Property="TextWrapping"
                            Value="Wrap" />
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition
                        Height="Auto"/>
                    <RowDefinition
                        Height="Auto"/>
                    <RowDefinition
                        Height="Auto"/>
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto"/>
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Grid.Row="0"
                    FontSize="15"
                    FontWeight="Bold"
                    Margin="0, 0, 0, 10"
                    Text="Settings" />

                <TextBlock
                    Grid.Column="0"
                    Grid.Row="1"
                    Text="Balance start date: " />
                <DatePicker
                    Grid.Column="1"
                    Grid.Row="1"
                    DisplayDateEnd="{x:Static system:DateTime.Today}"
                    SelectedDate="{Binding BalanceStartDate, Source={x:Static services:SettingsService.UserSettings}}"/>


                <!-- ReSharper disable once Xaml.MissingGridIndex -->
                <TextBlock
                    Grid.Row="2"
                    Style="{DynamicResource ExplanationText}"
                    Text="Sets the initial date for balance calculation." />

                <Rectangle
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Grid.Row="3"
                    Fill="{x:Static services:SettingsService.ThemeAccentBrush}"
                    Height="1" />
                <Rectangle
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Grid.Row="3"
                    Height="1"
                    Margin="0, 15">
                    <Rectangle.Fill>
                        <LinearGradientBrush
                            StartPoint="0,.5"
                            EndPoint="1,.5">
                            <GradientStop
                                Color="White"
                                Offset="0"/>
                            <GradientStop
                                Color="#00FFFFFF"
                                Offset=".5" />
                            <GradientStop
                                Color="White"
                                Offset="1"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>

                <CheckBox
                    x:Name="CbxCalculateExtraHours"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Grid.Row="4"
                    Content="Calculate extra hours"
                    IsChecked="{Binding CalculateExtraHours, Source={x:Static services:SettingsService.UserSettings}}"
                    Margin="0, 0, 0, 5" />

                <TextBlock
                    Grid.Column="0"
                    Grid.Row="5"
                    IsEnabled="{Binding IsChecked, ElementName=CbxCalculateExtraHours}"
                    Text="Target balance: " />
                <controls:TimePicker
                    Grid.Column="1"
                    Grid.Row="5"
                    IsEnabled="{Binding IsChecked, ElementName=CbxCalculateExtraHours}"
                    SelectedTime="{Binding TargetBalance, Source={x:Static services:SettingsService.UserSettings}}" />

                <TextBlock
                    Grid.Column="0"
                    Grid.Row="6"
                    IsEnabled="{Binding IsChecked, ElementName=CbxCalculateExtraHours}"
                    Text="Target balance deadline: " />
                <DatePicker
                    Grid.Column="1"
                    Grid.Row="6"
                    IsEnabled="{Binding IsChecked, ElementName=CbxCalculateExtraHours}"
                    Margin="0, 5, 0, 0"
                    DisplayDateStart="{x:Static system:DateTime.Today}"
                    SelectedDate="{Binding TargetBalanceDeadline, Source={x:Static services:SettingsService.UserSettings}}">
                    <DatePicker.Style>
                        <Style
                            TargetType="DatePicker">
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding SelectedDate, RelativeSource={RelativeSource Self}, Converter={StaticResource IsPreviousDateConverter}}"
                                    Value="True">
                                    <Setter
                                        Property="BorderBrush"
                                        Value="Red" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DatePicker.Style>
                </DatePicker>

                <!-- ReSharper disable once Xaml.MissingGridIndex -->
                <TextBlock
                    Grid.Row="7"
                    Margin="0, 0, 0, 10"
                    Text="Allows calculating the daily extra hours needed to reach the desired balance value until the specified date."
                    Style="{DynamicResource ExplanationText}" />

                <Button
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Grid.Row="8"
                    Content="OK"
                    HorizontalAlignment="Right"
                    Width="100"
                    Click="BtnOk_Click"/>
            </Grid>

            <controls:CloseButton
                HorizontalAlignment="Right"
                VerticalAlignment="Top" />
        </Grid>
    </Border>
</Window>
